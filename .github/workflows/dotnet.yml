on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test_solution:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore Webshop.Catalog.Solution/Webshop.Solution.sln
      
    - name: Build
      run: dotnet build Webshop.Catalog.Solution/Webshop.Solution.sln --no-restore
      
    - name: Test
      run: dotnet test Webshop.Catalog.Solution/Webshop.Solution.sln --no-build --verbosity normal

  build_deploy_service:
    needs: build_test_solution
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - service_name: "review_service"
            csproj_path: "Webshop.Catalog.Solution/Webshop.Review.API/Webshop.Review.API.csproj"
            dockerfile_path: "Webshop.Review.API/Dockerfile"
            image_name: "benj3249/webshopreviewservice"
          - service_name: "payment_service"
            csproj_path: "Webshop.Catalog.Solution/Webshop.Payment.Api/Webshop.Payment.Api.csproj"
            dockerfile_path: "Webshop.Payment.Api/Dockerfile"
            image_name: "benj3249/webshoppaymentapi"
          - service_name: "customer_service"
            csproj_path: "Webshop.Catalog.Solution/Webshop.Customer.Api/Webshop.Customer.Api.csproj"
            dockerfile_path: "Webshop.Customer.Api/Dockerfile"
            image_name: "benj3249/webshopcustomerapi"
          - service_name: "catalog_service"
            csproj_path: "Webshop.Catalog.Solution/Webshop.Catalog.Api/Webshop.Catalog.Api.csproj"
            dockerfile_path: "Webshop.Catalog.Api/Dockerfile"
            image_name: "benj3249/webshopcatalogapi"
          - service_name: "help_service"
            csproj_path: "Webshop.Catalog.Solution/Webshop.Help/Webshop.Help.csproj"
            dockerfile_path: "Webshop.Help/Dockerfile"
            image_name: "benj3249/webshophelp"
          - service_name: "gateway_service"
            csproj_path: "Webshop.Catalog.Solution/Webshop.ReviewServiceGateway/Webshop.ReviewServiceGateway.csproj"
            dockerfile_path: "Webshop.ReviewServiceGateway/Dockerfile"
            image_name: "benj3249/webshopgateway"
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ matrix.config.csproj_path }}

    - name: Build
      run: dotnet build ${{ matrix.config.csproj_path }} --no-restore

    - name: Test
      run: dotnet test ${{ matrix.config.csproj_path }} --no-build --verbosity normal

    - name: Publish
      run: dotnet publish ${{ matrix.config.csproj_path }}

    - name: Build Docker image
      working-directory: Webshop.Catalog.Solution
      run: |
        docker build -f ${{ matrix.config.dockerfile_path }} --force-rm -t ${{ matrix.config.image_name }}:latest --build-arg "BUILD_CONFIGURATION=Debug" .

    - name: Push Docker image
      run: docker push ${{ matrix.config.image_name }}:latest

