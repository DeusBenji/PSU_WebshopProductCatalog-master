on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  build_test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        service:
          - { name: Webshop.Catalog.Api, path: Webshop.Catalog.Api/Webshop.Catalog.Api.csproj, image: benj3249/webshopcatalogapi }
          - { name: Webshop.Payment.Api, path: Webshop.Payment.Api/Webshop.Payment.Api.csproj, image: benj3249/webshoppaymentapi }
          - { name: Webshop.Customer.Api, path: Webshop.Customer.Api/Webshop.Customer.Api.csproj, image: benj3249/webshopcustomerapi }
          - { name: Webshop.Review.API, path: Webshop.Review.API/Webshop.Review.API.csproj, image: benj3249/webshopreviewservice }
          - { name: Webshop.Help, path: Webshop.Help/Webshop.Help.csproj, image: benj3249/webshophelp }
          - { name: Webshop.ReviewServiceGateway, path: Webshop.ReviewServiceGateway/Webshop.ReviewServiceGateway.csproj, image: benj3249/webshopgateway }
    steps:
    - uses: actions/checkout@v3

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ${{ matrix.service.path }}

    - name: Build
      run: dotnet build ${{ matrix.service.path }} --no-restore

    - name: Test
      run: dotnet test ${{ matrix.service.path }} --no-build --verbosity normal

  publish_docker:
    needs: build_test
    strategy:
      matrix:
        service:
          - { name: Webshop.Catalog.Api, path: Webshop.Catalog.Api, image: benj3249/webshopcatalogapi }
          - { name: Webshop.Payment.Api, path: Webshop.Payment.Api, image: benj3249/webshoppaymentapi }
          - { name: Webshop.Customer.Api, path: Webshop.Customer.Api, image: benj3249/webshopcustomerapi }
          - { name: Webshop.Review.API, path: Webshop.Review.API, image: benj3249/webshopreviewservice }
          - { name: Webshop.Help, path: Webshop.Help, image: benj3249/webshophelp }
          - { name: Webshop.ReviewServiceGateway, path: Webshop.ReviewServiceGateway, image: benj3249/webshopgateway }
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      working-directory: ${{ matrix.service.path }}
      run: |
        docker build -f Dockerfile --force-rm -t ${{ matrix.service.image }}:latest \
          --build-arg "BUILD_CONFIGURATION=Debug" .

    - name: Push Docker image
      run: docker push ${{ matrix.service.image }}:latest
